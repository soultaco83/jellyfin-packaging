name: "Dev-- Build Docker"

on:
  schedule:
    - cron: '0 9 * * 0'  # Sunday at 9am UTC
  workflow_dispatch:
    # Manual trigger

permissions:
  contents: write

# Prevent concurrent runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  docker-build:
    runs-on: ubuntu-24.04
    continue-on-error: false
    steps:
      - name: "Set dated version for builds"
        id: version
        run: |
          echo "JELLYFIN_VERSION=$(date +'%Y%m%d%H')" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: "Install dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install --yes python3-git python3-yaml

      - name: "Checkout repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          submodules: false

      - name: "Prepare repository"
        run: |
          ./checkout.py master

      - name: "Commit and push submodule updates"
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Check if there are any changes to commit
          if git diff --quiet && git diff --staged --quiet; then
            echo "No submodule changes to commit"
          else
            git add -A
            git commit -m "Update submodules to latest master - Build ${{ env.JELLYFIN_VERSION }}"
            
            # Push with retry logic
            for i in {1..3}; do
              if git push origin master; then
                echo "Successfully pushed submodule updates"
                break
              else
                echo "Push failed, attempt $i/3"
                if [ $i -lt 3 ]; then
                  echo "Pulling latest changes and retrying..."
                  git pull --rebase origin master || git pull --no-rebase origin master
                  sleep 5
                else
                  echo "Failed to push submodule updates after 3 attempts"
                  exit 1
                fi
              fi
            done
          fi

      - name: "Set permissions for docker-entrypoint.sh"
        run: |
          if [ -f "docker/docker-entrypoint.sh" ]; then
            chmod +x docker/docker-entrypoint.sh
          fi

      - name: "Run builder for Docker containers"
        run: |
          sudo --preserve-env ./build.py ${{ env.JELLYFIN_VERSION }} docker amd64 --local

      - name: "Debug: List Docker images"
        run: docker images

      - name: "Log in to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Push to Docker Hub"
        run: |
          SOURCE_IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "${{ env.JELLYFIN_VERSION }}-amd64" | head -n 1)
          
          if [ -z "$SOURCE_IMAGE" ]; then
            echo "Error: Could not find the source image"
            docker images
            exit 1
          fi
          
          echo "Found source image: ${SOURCE_IMAGE}"
          
          # Tag and push dev and date-dev
          echo "Tagging and pushing images..."
          docker tag "${SOURCE_IMAGE}" "soultaco83/jellyfin_with_request:dev"
          docker tag "${SOURCE_IMAGE}" "soultaco83/jellyfin_with_request:${{ env.BUILD_DATE }}-dev"
          docker push "soultaco83/jellyfin_with_request:dev"
          docker push "soultaco83/jellyfin_with_request:${{ env.BUILD_DATE }}-dev"

      - name: "Notify Discord on failure"
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "ðŸš¨ Jellyfin Docker Build Failed",
                   "description": "The Dev Docker build workflow has failed.",
                   "color": 15158332,
                   "fields": [
                     {
                       "name": "Repository",
                       "value": "${{ github.repository }}",
                       "inline": true
                     },
                     {
                       "name": "Branch",
                       "value": "${{ github.ref_name }}",
                       "inline": true
                     },
                     {
                       "name": "Version",
                       "value": "${{ env.JELLYFIN_VERSION }}",
                       "inline": true
                     },
                     {
                       "name": "Workflow",
                       "value": "[View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})",
                       "inline": false
                     }
                   ],
                   "timestamp": "${{ github.event.head_commit.timestamp }}"
                 }]
               }' \
               "${{ secrets.DISCORD_WEBHOOK_URL }}"
